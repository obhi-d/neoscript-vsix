{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "scopeName": "source.neoscript",
    "name": "NeoScript",
    "fileTypes": [
        ".neoscript",
        ".ns"
    ],
    "foldingStartMarker": "\\{\\s*$",
    "foldingStopMarker": "^\\s*\\}",
    "repository": {
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.neoscript",
                    "match": "\b(template|using|import)\b"
                }
            ]
        },
        "comment": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.neoscript",
                    "match": "(//).*$\n?",
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.comment.lua"
                        }
                    }
                },
                {
                    "name": "comment.block.neoscript",
                    "begin": "/\\*",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.neoscript"
                        }
                    },
                    "end": "\\*/",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.neoscript"
                        }
                    }
                }
            ]
        },
        "doublequotestring": {
            "name": "string.quoted.double.neoscript",
            "begin": "\"",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.neoscript"
                }
            },
            "end": "\"",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.neoscript"
                }
            },
            "patterns": [
                {
                    "match": "\\\\(\\d{1,3}|.)",
                    "name": "constant.character.escape.neoscript"
                }
            ]
        },
        "list": {
            "name": "meta.parameterlist.neoscript",
            "begin": "\\[",
            "end": "\\]",
            "beginCaptures": {
                "0": {
                    "name": "keyword.operator.neoscript"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "keyword.operator.neoscript"
                }
            },
            "patterns": [
                {
                    "include": "#parameter"
                }
            ]
        },
        "assignment": {
            "name": "meta.assignment.neoscript",
            "match": "([\\w_\\.\\$\\#]+)\\s*(\\=)",
            "captures": {
                "1": {
                    "name": "entity.name.tag.neoscript"
                },
                "2": {
                    "name": "keyword.operator.neoscript"
                }
            }
        },
        "special": {
            "name": "meta.special.neoscript",
            "begin": "\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "keyword.operator.neoscript"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "keyword.operator.neoscript"
                }
            },
            "patterns": [
                {
                    "include": "#assignment"
                },
                {
                    "include": "#parameter"
                }
            ]
        },
        "parameter": {
            "patterns": [
                {
                    "include": "#doublequotestring"
                },
                {
                    "name": "keyword.operator.neoscript",
                    "match": "(\\b(and|or|not)\\b)|(\\+|-|%|#|\\*|\\/|\\^|==?|~=|<=?|>=?|(?<!\\.)\\.{2}(?!\\.))"
                },
                {
                    "name": "variable.paramter.neoscript",
                    "match": "([\\w_\\.\\$\\#]+)"
                },
                {
                    "include": "#list"
                },
                {
                    "include": "#special"
                }
            ]
        },
        "import": {
            "match": "(import)([ \\t\\n\"\\'.\\w]+)(;)",
            "captures": {
                "1": {
                    "name": "keyword.control.neoscript"
                },
                "2": {
                    "name": "string.unquoted.neoscript"
                },
                "3": {
                    "name": "keyword.operator.neoscript"
                }
            }
        },
        "template": {
            "begin": "(using|template)(.*)(\\<)",
            "end": "(\\>)",
            "beginCaptures": {
                "1": {
                    "name": "keyword.control.neoscript"
                },
                "2": {
                    "name": "variable.parameter.neoscript"
                },
                "3": {
                    "name": "keyword.operator.neoscript"
                }
            },
            "endCaptures": {
                "1": {
                    "name": "keyword.operator.neoscript"
                }
            },
            "patterns": [
                {
                    "include": "#parameter"
                }
            ]
        },
        "command": {
            "begin": "([\\w\\.\\$\\#]+)",
            "end": "\\{|\\;",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.function.command.neoscript"
                }
            },
            "patterns": [
                {
                    "include": "#parameter"
                }
            ]
        },
        "block": {
            "begin": "\\{",
            "end": "\\}",
            "beginCaptures": {
                "0": {
                    "name": "keyword.operator.neoscript"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "keyword.operator.neoscript"
                }
            },
            "patterns": [
                {
                    "include": "#template"
                },
                {
                    "include": "#command"
                },
                {
                    "include": "$self"
                }
            ]
        },
        "commands": {
            "patterns": [
                {
                    "include": "#import"
                },
                {
                    "include": "#template"
                },
                {
                    "include": "#block"
                },
                {
                    "include": "#command"
                }
            ]
        },
      "textRegion": {
        "name": "markup.text.neoscript",
        "begin": "(^\\{\\{)?\\s*([^\\: \\t\\n]+):([^\\}]*)\\}\\}",
        "end": "^\\{\\{",
        "beginCaptures": {
          "2": {
            "name": "keyword.control.neoscript"
          },
          "3": {
            "name": "entity.name.section.neoscript"
          }
        },
        "patterns": [
          {
            "name": "constant.character.escape.neoscript",
            "match": "\\."
          }
        ]
      },
        "codeRegion": {
            "name": "markup.code.neoscript",
            "begin": "(^\\{\\{)?\\s*(code):([^\\}]*)\\}\\}",
            "end": "^\\{\\{",
            "beginCaptures": {
                "2": {
                    "name": "keyword.control.neoscript"
                },
                "3": {
                    "name": "entity.name.section.neoscript"
                }
            },
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "include": "#commands"
                }
            ]
        },
        "general": {
            "patterns": [
                {
                    "include": "#textRegion"
                },
                {
                    "include": "#codeRegion"
                },
                {
                    "include": "#comment"
                },
                {
                    "include": "#keywords"
                },
                {
                    "include": "#commands"
                }
            ]
        }
    },
    "patterns": [
        {
            "include": "#general"
        }
    ]
}